{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","requestNewQuote","fetch","then","res","json","result","setState","quote","quotes","state","hex","bigint","parseInt","join","random_hex","Math","floor","random","toString","this","hex2RGB","console","log","text","author","className","id","onClick","bind","href","target","rel","style","getRandAccentStyle","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QA0EeA,E,kDAtEb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAMRC,gBAAkB,WAChBC,MAAM,4DACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZC,MAAOF,EAAOG,OAAO,SAX3B,EAAKC,MAAQ,CACXF,MAAO,IAHO,E,qDAmBlB,WAAoB,IAAD,OACjBN,MAAM,4DACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZC,MAAOF,EAAOG,OAAO,U,qBAM7B,SAAQE,GACN,IAAIC,EAASC,SAASF,EAAK,IAI3B,MAAO,CAHEC,GAAU,GAAM,IAChBA,GAAU,EAAK,IACP,IAATA,GACSE,S,gCAGnB,WACE,IAAIC,EAAaC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAE7D,MAAQ,CAAC,WADM,0CAA2CC,KAAKC,QAAQN,GAAY,4B,oBAIrF,WACEO,QAAQC,IAAIH,KAAKV,MAAMF,OADjB,MAGiBY,KAAKV,MAAMF,MAA3BgB,EAHD,EAGCA,KAAMC,EAHP,EAGOA,OACb,OACE,sBAAKC,UAAU,MAAf,UACA,gCACE,sDAEA,sBAAKC,GAAG,YAAR,UACE,mBAAGA,GAAG,OAAN,SAAcH,IACd,mBAAGG,GAAG,SAAN,SAAgBF,IAChB,sBAAKE,GAAG,UAAR,UACE,wBAAQA,GAAG,YAAYD,UAAY,gBAAgBE,QAASR,KAAKnB,gBAAgB4B,KAAKT,MAAtF,uBACA,mBAAGM,UAAU,gBAAgBC,GAAG,cAAcG,KAAM,yCAAyCN,EAAK,SAASC,EAAQM,OAAO,SAASC,IAAI,aAAvI,wBAIJ,qBAAKN,UAAY,WAAWO,MAAQb,KAAKc,uBACzC,qBAAKR,UAAY,WAAWO,MAAQb,KAAKc,8B,GAjE/BC,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.894459cc.chunk.js","sourcesContent":["import './App.scss';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quote: []\n    };\n  }\n  \n  requestNewQuote = () =>{\n    fetch(\"https://goquotes-api.herokuapp.com/api/v1/random?count=1\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          quote: result.quotes[0]\n        });\n      }\n    );\n  }\n\n  componentDidMount(){\n    fetch(\"https://goquotes-api.herokuapp.com/api/v1/random?count=1\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          quote: result.quotes[0]\n        });\n      }\n    );\n  }\n\n  hex2RGB(hex){\n    var bigint = parseInt(hex, 16);\n    var r = (bigint >> 16) & 255;\n    var g = (bigint >> 8) & 255;\n    var b = bigint & 255;\n    return [r, g, b].join();\n  }\n\n  getRandAccentStyle(){\n    let random_hex = Math.floor(Math.random()*16777215).toString(16);\n    let property = \"radial-gradient(circle at 50% 50%, rgb(\"+ this.hex2RGB(random_hex)+\"), rgba(76, 0, 255, 0)\";\n    return ({\"background\":property});\n  }\n  \n  render(){\n    console.log(this.state.quote);\n    \n    const {text, author} = this.state.quote;\n    return (\n      <div className=\"App\">\n      <div>\n        <h1>Random Quote Machine</h1>\n\n        <div id=\"quote-box\">\n          <p id=\"text\">{text}</p>\n          <p id=\"author\">{author}</p>\n          <div id=\"buttons\">\n            <button id=\"new-quote\" className = \"glow-on-hover\" onClick={this.requestNewQuote.bind(this)}>New Quote</button>\n            <a className=\"fa fa-twitter\" id=\"tweet-quote\" href={'https://twitter.com/intent/tweet?text='+text+\"%0a%0a\"+author} target=\"_blank\" rel=\"noreferrer\"> </a>\n          </div>\n        </div>\n        </div>\n        <div className = \"accent-1\" style= {this.getRandAccentStyle()}></div>\n        <div className = \"accent-2\" style= {this.getRandAccentStyle()}></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}